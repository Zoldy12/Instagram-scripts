import os
import time
import random
from playwright.sync_api import sync_playwright

def unfollow_user(page, username):
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if not navigate(page, username):
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É @{username}")
                return False
            
            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            try:
                page.wait_for_selector("header section", timeout=10000)
                print(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ @{username} –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            except:
                print(f"‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ @{username} –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —á–∞—Å—Ç–∏—á–Ω–æ")
            
            # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è
            unfollow_success = unfollow_user_process(page, username)
            
            if unfollow_success:
                print(f"üéâ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç @{username}")
                return True
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç @{username}")
            
        except Exception as e:
            print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


def unfollow_user_process(page, username):
    """–ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
    subscription_state = check_subscription_state(page, username)
    print(f"üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏: {subscription_state}")
    
    if subscription_state == "not_following":
        print(f"‚ÑπÔ∏è –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ @{username}")
        return True
    
    elif subscription_state == "following":
        return handle_following_state(page, username)
    
    elif subscription_state == "requested":
        return handle_requested_state(page, username)
    
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏: {subscription_state}")
        return False

def check_subscription_state(page, username):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏"""
    try:
        # –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        time.sleep(2)
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–¥–ø–∏—Å–∫–∏" / "Following"
        try:
            following_selectors = [
                "button:has-text('–ü–æ–¥–ø–∏—Å–∫–∏')",
                "button:has-text('Following')",
                "//button[contains(text(), '–ü–æ–¥–ø–∏—Å–∫–∏')]",
                "//button[contains(text(), 'Following')]"
            ]
            
            for selector in following_selectors:
                try:
                    if selector.startswith('//'):
                        if page.locator(selector).first.is_visible(timeout=2000):
                            return "following"
                    else:
                        if page.locator(selector).first.is_visible(timeout=2000):
                            return "following"
                except:
                    continue
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥–ø–∏—Å–∫–∏': {e}")

        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω" / "Requested"
        try:
            requested_selectors = [
                "button:has-text('–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')",
                "button:has-text('Requested')",
                "//button[contains(text(), '–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')]",
                "//button[contains(text(), 'Requested')]"
            ]
            
            for selector in requested_selectors:
                try:
                    if selector.startswith('//'):
                        if page.locator(selector).first.is_visible(timeout=2000):
                            return "requested"
                    else:
                        if page.locator(selector).first.is_visible(timeout=2000):
                            return "requested"
                except:
                    continue
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–æ–ø–∫–∏ '–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω': {e}")

        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è" / "Follow"
        try:
            follow_selectors = [
                "button:has-text('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')",
                "button:has-text('Follow')",
                "//button[contains(text(), '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')]",
                "//button[contains(text(), 'Follow')]"
            ]
            
            for selector in follow_selectors:
                try:
                    if selector.startswith('//'):
                        if page.locator(selector).first.is_visible(timeout=2000):
                            return "not_following"
                    else:
                        if page.locator(selector).first.is_visible(timeout=2000):
                            return "not_following"
                except:
                    continue
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è': {e}")

        # 4. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –∏—â–µ–º –ª—é–±—É—é –∫–Ω–æ–ø–∫—É –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        try:
            header_buttons = page.locator("header button, section button, div[role='button']")
            button_count = header_buttons.count()
            
            for i in range(min(button_count, 5)):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 5 –∫–Ω–æ–ø–æ–∫
                try:
                    button = header_buttons.nth(i)
                    if button.is_visible(timeout=1000):
                        button_text = button.text_content(timeout=1000)
                        if button_text:
                            text_lower = button_text.strip().lower()
                            
                            if any(word in text_lower for word in ["–ø–æ–¥–ø–∏—Å–∫–∏", "following"]):
                                return "following"
                            elif any(word in text_lower for word in ["–∑–∞–ø—Ä–æ—Å", "requested"]):
                                return "requested"
                            elif any(word in text_lower for word in ["–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", "follow"]):
                                return "not_following"
                except:
                    continue
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∫–Ω–æ–ø–æ–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞: {e}")

        return "unknown"
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return "unknown"


def handle_following_state(page, username):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print(f"üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–ø–∏—Å–∫—É –æ—Ç @{username} (—Å—Ç–∞—Ç—É—Å: –ü–æ–¥–ø–∏—Å–∫–∏)")
    
    try:
        # –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–ø–∏—Å–∫–∏" / "Following"
        following_selectors = [
            "button:has-text('–ü–æ–¥–ø–∏—Å–∫–∏')",
            "button:has-text('Following')",
            "//button[contains(text(), '–ü–æ–¥–ø–∏—Å–∫–∏')]",
            "//button[contains(text(), 'Following')]"
        ]
        
        for selector in following_selectors:
            try:
                if selector.startswith('//'):
                    button = page.locator(selector).first
                else:
                    button = page.locator(selector).first
                
                if button.is_visible(timeout=5000):
                    button.click()
                    print("‚úÖ –ù–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏")
                    time.sleep(2)
                    
                    # –¢–µ–ø–µ—Ä—å –∏—â–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É" / "Unfollow"
                    return confirm_unfollow(page, username)
                    
            except:
                continue
        
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏")
        return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è '–ü–æ–¥–ø–∏—Å–∫–∏': {e}")
        return False

def handle_requested_state(page, username):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–≥–¥–∞ –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"""
    print(f"üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–º–µ–Ω—É –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ @{username} (—Å—Ç–∞—Ç—É—Å: –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω)")
    
    try:
        # –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω" / "Requested"
        requested_selectors = [
            "button:has-text('–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')",
            "button:has-text('Requested')",
            "//button[contains(text(), '–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')]",
            "//button[contains(text(), 'Requested')]"
        ]
        
        for selector in requested_selectors:
            try:
                if selector.startswith('//'):
                    button = page.locator(selector).first
                else:
                    button = page.locator(selector).first
                
                if button.is_visible(timeout=5000):
                    button.click()
                    print("‚úÖ –ù–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω'")
                    time.sleep(2)
                    
                    # –¢–µ–ø–µ—Ä—å –∏—â–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å" / "Cancel Request"
                    return confirm_cancel_request(page, username)
                    
            except:
                continue
        
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É '–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω'")
        return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è '–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω': {e}")
        return False

def confirm_unfollow(page, username):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –æ—Ç–ø–∏—Å–∫—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print(f"üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø–∏—Å–∫–∏...")
    
    try:
        # –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É" / "Unfollow"
        unfollow_selectors = [
            "button:has-text('–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')",
            "button:has-text('Unfollow')",
            "button:has-text('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è')",
            "div[role='button']:has-text('–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')",
            "div[role='button']:has-text('Unfollow')",
            "//button[contains(text(), '–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')]",
            "//button[contains(text(), 'Unfollow')]"
        ]
        
        for selector in unfollow_selectors:
            try:
                if selector.startswith('//'):
                    unfollow_button = page.locator(selector).first
                else:
                    unfollow_button = page.locator(selector).first
                    
                if unfollow_button.is_visible(timeout=3000):
                    unfollow_button.click()
                    print("‚úÖ –ù–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø–∏—Å–∫–∏")
                    
                    # –ñ–¥–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
                    time.sleep(3)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–ø–∏—Å–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
                    if verify_unfollow_success(page, username):
                        print(f"‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ")
                        return True
                    else:
                        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–ø–∏—Å–∫—É –æ—Ç @{username}")
                        return False
                        
            except:
                continue
        
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø–∏—Å–∫–∏")
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ—Ç–ø–∏—Å–∫–∏: {e}")
        return False

def confirm_cancel_request(page, username):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –æ—Ç–º–µ–Ω—É –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏"""
    print(f"üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞...")
    
    try:
        # –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å" / "Cancel Request"
        cancel_selectors = [
            "button:has-text('–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')",
            "button:has-text('Cancel Request')",
            "div[role='button']:has-text('–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')",
            "div[role='button']:has-text('Cancel Request')",
            "//button[contains(text(), '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å')]",
            "//button[contains(text(), 'Cancel Request')]"
        ]
        
        for selector in cancel_selectors:
            try:
                if selector.startswith('//'):
                    cancel_button = page.locator(selector).first
                else:
                    cancel_button = page.locator(selector).first
                    
                if cancel_button.is_visible(timeout=3000):
                    cancel_button.click()
                    print("‚úÖ –ù–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å'")
                    
                    # –ñ–¥–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
                    time.sleep(3)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–º–µ–Ω–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
                    if verify_cancel_success(page, username):
                        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–¥–ø–∏—Å–∫–∏ @{username}")
                        return True
                    else:
                        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–º–µ–Ω—É –∑–∞–ø—Ä–æ—Å–∞ @{username}")
                        return False
                        
            except:
                continue
        
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞")
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def verify_unfollow_success(page, username):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –æ—Ç–ø–∏—Å–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"""
    try:
        # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è"
        time.sleep(2)
        
        follow_selectors = [
            "button:has-text('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')",
            "button:has-text('Follow')",
            "//button[contains(text(), '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')]",
            "//button[contains(text(), 'Follow')]"
        ]
        
        for selector in follow_selectors:
            try:
                if page.locator(selector).first.is_visible(timeout=3000):
                    return True
            except:
                continue
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
        current_state = check_subscription_state(page, username)
        if current_state == "not_following":
            return True
            
        return False
        
    except:
        return False

def verify_cancel_success(page, username):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –æ—Ç–º–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"""
    try:
        # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è"
        time.sleep(2)
        
        follow_selectors = [
            "button:has-text('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')",
            "button:has-text('Follow')",
            "//button[contains(text(), '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')]",
            "//button[contains(text(), 'Follow')]"
        ]
        
        for selector in follow_selectors:
            try:
                if page.locator(selector).first.is_visible(timeout=3000):
                    return True
            except:
                continue
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        current_state = check_subscription_state(page, username)
        if current_state == "not_following":
            return True
            
        return False
        
    except:
        return False

def navigate(page, username):
    max_attempts = 3
    
    for attempt in range(max_attempts):
        try:
            print(f"üîÑ –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ @{username}")
            
            # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º –ø–µ—Ä–µ—Ö–æ–¥–æ–º
            try:
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏
                page.keyboard.press("Escape")
                time.sleep(1)
            except:
                pass
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π
            page.goto(f"https://www.instagram.com/{username}/", 
                     wait_until="domcontentloaded",  # –ú–µ–Ω—å—à–µ –∂–¥–µ–º
                     timeout=15000)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            current_url = page.url
            expected_url = f"https://www.instagram.com/{username}/"
            
            if expected_url in current_url:
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ @{username}")
                return True
            else:
                print(f"‚ö†Ô∏è –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞: {current_url}")
                
                # –ï—Å–ª–∏ –Ω–∞—Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–ª–æ, –ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑
                time.sleep(2)
                continue
                
        except Exception as e:
            error_msg = str(e)
            if "interrupted" in error_msg.lower() or "navigation" in error_msg.lower():
                print(f"üîÑ –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞, –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞...")
                time.sleep(2)
                continue
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞: {error_msg}")
                return False
    
    print(f"üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ @{username} –ø–æ—Å–ª–µ {max_attempts} –ø–æ–ø—ã—Ç–æ–∫")
    return False


def main():
    with sync_playwright() as pl:
        unfollowed_users = []
        
        browser = pl.chromium.launch(headless=False)
        page = browser.new_page()
        page.set_default_timeout(30000)
        
        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª—è
            page.goto(f"https://www.instagram.com/chebotarev.nikita/", wait_until='load')
            
            # –ü—Ä–∏–Ω–∏–º–∞–µ–º cookies
            cookie_selectors = [
                "button._a9--._a9_1",
                "button[type='button']:has-text('–†–∞–∑—Ä–µ—à–∏—Ç—å')",
                "button:has-text('–†–∞–∑—Ä–µ—à–∏—Ç—å')",
                "button:has-text('Allow All')",
                "button:has-text('Accept All')",
                "button._a9--",
                "//button[contains(text(), '–†–∞–∑—Ä–µ—à–∏—Ç—å')]",
                "//button[contains(text(), 'Allow')]",
                "//button[contains(text(), 'Accept')]"
            ]
            
            cookie_accepted = False
            for selector in cookie_selectors:
                try:
                    page.wait_for_selector(selector, timeout=5000)
                    page.click(selector)
                    print(f"‚úÖ Cookies –ø—Ä–∏–Ω—è—Ç—ã —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º: {selector}")
                    cookie_accepted = True
                    break
                except:
                    continue
                
            signin_selectors = [
                "a[role='link']:has-text('–í–æ–π—Ç–∏')",
                ]
            
            for selector in signin_selectors:
                button = page.locator(selector).first      
                button.click()
                print("‚úÖ –ù–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–í–æ–π—Ç–∏'")
                
        except Exception as e:
            print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    
        entery_check = input('–ê–≤—Ç–æ—Ä–∏–∑—É–π—Å—è –∏ –Ω–∞–∂–º–∏ Enter –¥–ª—è –∑–∞–ø—É—Å–∫–∞')
        start_time = round(time.time())
    
        with open("followed_users.txt", "r", encoding="utf-8") as file:
            all_data = []
            for stroka in file:
                stroka = stroka[:-1]
                all_data.append(stroka)
            
            for user in all_data:
                if unfollow_user(page, user):
                    unfollowed_users.append(user)
                time.sleep(0.5)

        print("\n" + "="*50)
        print("üìä –û–¢–ß–ï–¢ –û–ë –û–¢–ü–ò–°–ö–ê–•")
        print("="*50)
        print(f"–í—Å–µ–≥–æ –æ—Ç–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {len(unfollowed_users)}")
        print("\n–°–ø–∏—Å–æ–∫ –æ—Ç–ø–∏—Å–æ–∫:")
        print("-" * 20)

        for i, usernames in enumerate(unfollowed_users, 1):
            print(f"{i:2d}. {usernames}")
        
        try:  
            os.remove("followed_users.txt")
            print('‚úÖ –§–∞–π–ª —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏ —É–¥–∞–ª—ë–Ω')
        except Exception as e:
            print(f"üóë –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª")
            
        # –†–∞—Å—á—ë—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        end_time = round(time.time())
        hours = (end_time - start_time) // 3600
        minutes = ((end_time - start_time) - hours * 3600) // 60
        seconds = (end_time - start_time) - hours * 3600 - minutes * 60
        if hours:
            total_time = f"{hours}—á. {minutes}–º–∏–Ω. {seconds}—Å."
        elif minutes:
            total_time = f"{minutes}–º–∏–Ω. {seconds}—Å."
        else:
            total_time = f"{seconds}—Å."
        print(f"‚åö –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã: {total_time}")
        
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        close = input('–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞–∂–º–∏ Enter')
        browser.close()

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É
if __name__ == "__main__":
    main()